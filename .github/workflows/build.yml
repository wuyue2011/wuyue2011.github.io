# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: Build & Release
on: [ pull_request, push , workflow_dispatch ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        minecraft: [ 1.17.1, 1.18.2, 1.19.2, 1.19.3, 1.19.4, 1.20.1 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.11
      - name: Build ${{ matrix.minecraft }}
        run: gradle setupLibrary build -PbuildVersion="${{ matrix.minecraft }}" --no-daemon
      - name: Get commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get Mod Version
        run: |
          MOD_VERSION=$(grep "mod_version=" gradle.properties | cut -d'=' -f2)
          echo "MOD_VERSION=$MOD_VERSION"
          echo "MOD_VERSION=$MOD_VERSION" >> $GITHUB_ENV
      - name: Capture release artifacts individually
        uses: actions/upload-artifact@v4
        with:
          name: MTR-ANTE-${{ steps.vars.outputs.sha_short }}-${{ env.MOD_VERSION }}+${{ matrix.minecraft }}
          path: build/*.jar
          compression-level: 9
  upload-collectively:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        with:
            fetch-depth: 0
        uses: actions/checkout@v4
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -R artifacts
      - name: Get commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get Mod Version
        run: |
          MOD_VERSION=$(grep "mod_version=" gradle.properties | cut -d'=' -f2)
          echo "MOD_VERSION=$MOD_VERSION"
          echo "MOD_VERSION=$MOD_VERSION" >> $GITHUB_ENV
      - name: Capture release artifacts collectively
        uses: actions/upload-artifact@v4
        with:
          name: MTR-ANTE-${{ steps.vars.outputs.sha_short }}-${{ env.MOD_VERSION }}
          path: artifacts/*.jar
          compression-level: 9
  github-release:
    if: startsWith(github.event.head_commit.message, 'rel -g') || startsWith(github.event.head_commit.message, 'rel -a') || startsWith(github.event.head_commit.message, 'rel -t')
    runs-on: ubuntu-latest
    needs: upload-collectively
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract changelog
        run: |
          chmod +x ./extract_changelog.sh
          ./extract_changelog.sh
      - name: Read changelog content
        id: read_changelog
        run: |
          
          CONTENT=$(cat extracted_changelog.md)
          
          # 使用EOF声明多行输出
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get Mod Version
        run: |
          MOD_VERSION=$(grep "mod_version=" gradle.properties | cut -d'=' -f2)
          echo "MOD_VERSION=$MOD_VERSION" >> $GITHUB_ENV

      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: MTR-ANTE-${{ steps.vars.outputs.sha_short }}-${{ env.MOD_VERSION }}
          path: artifacts
          merge-multiple: true

      - name: Set current date
        run: echo "CUR_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Release
        if: ${{ !startsWith(github.event.head_commit.message, 'rel -t') }}
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*.jar
          body: |
            更新日期: ${{ env.CUR_DATE }}
            工作流: [${{ env.SHA_SHORT }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            更新内容:
            ${{ steps.read_changelog.outputs.content }}
            
            相关链接:
            - [RailwayAesthetics-Future文档](https://aphrodite281.github.io/RailwayAesthetics-Future/#/)
            - [ANTE文档](https://aphrodite281.github.io/mtr-ante/#/)
            - [RailwayAesthetics-Future发行版](https://github.com/aphrodite281/RailwayAesthetics-Future/releases)
            - [ANTE发行版](https://github.com/aphrodite281/mtr-ante/releases)
          draft: false
          prerelease: false
          tag_name: ${{ env.MOD_VERSION }}
  modrinth-publish:
    if: startsWith(github.event.head_commit.message, 'rel -m') || startsWith(github.event.head_commit.message, 'rel -a') || startsWith(github.event.head_commit.message, 'rel -t')
    strategy:
      fail-fast: false
      matrix:
        minecraft: [ 1.17.1, 1.18.2, 1.19.2, 1.19.3, 1.19.4, 1.20.1 ]
    runs-on: ubuntu-latest
    environment: modrinth
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get Mod Version
        run: |
          MOD_VERSION=$(grep "mod_version=" gradle.properties | cut -d'=' -f2)
          echo "MOD_VERSION=$MOD_VERSION" >> $GITHUB_ENV
      - name: Extract changelog
        run: |
          chmod +x ./extract_changelog.sh
          ./extract_changelog.sh
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: MTR-ANTE-${{ steps.vars.outputs.sha_short }}-${{ env.MOD_VERSION }}+${{ matrix.minecraft }}
          path: artifacts
          merge-multiple: true
      - name: Show structure of downloaded files
        run: ls -R artifacts
      - name: Show require file name
        run: echo "artifacts/MTR-ANTE-${{ env.MOD_VERSION }}+${{ matrix.minecraft }}.jar"
      - name: Modrinth Publish
        uses: Kir-Antipov/mc-publish@v3.3
        if: ${{ !startsWith(github.event.head_commit.message, 'rel -t') }}
        with:
          modrinth-id: ybOYitTg
          modrinth-featured: true
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: artifacts/MTR-ANTE-${{ env.MOD_VERSION }}+${{ matrix.minecraft }}.jar
          name: MTR-ANTE-${{ env.MOD_VERSION }}+${{ matrix.minecraft }}
          version: ${{ env.MOD_VERSION }}+${{ matrix.minecraft }}
          version-type: release
          loaders: |
            fabric
            forge
          game-versions: ${{ matrix.minecraft }}
          retry-attempts: 2
          retry-delay: 10000
          fail-mode: fail
          dependencies: |
            MTR-3.2.2(required){modrinth:XKPAmI6u}
          changelog-file: extracted_changelog.md
  deploy-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write 
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download current artifact
        uses: actions/download-artifact@v4
        with:
          path: ./docs/artifacts
          merge-multiple: true
      - name: Display structure
        run: ls -R ./docs/
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4