# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: Build
on: [ pull_request, push ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        minecraft: [ 1.17.1, 1.18.2, 1.19.2, 1.19.3, 1.19.4, 1.20.1 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          generate-job-summary: false
      - name: Setup ${{ matrix.minecraft }}
        run: ./gradlew setupLibrary -PbuildVersion="${{ matrix.minecraft }}"
      - name: Build ${{ matrix.minecraft }}
        run: ./gradlew build -PbuildVersion="${{ matrix.minecraft }}"
      - name: Get commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Capture release artifacts individually
        uses: actions/upload-artifact@v4
        with:
          name: MTR-ANTE-${{ steps.vars.outputs.sha_short }}+${{ matrix.minecraft }}
          path: build/*.jar
          compression-level: 9
  upload-collectively:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -R artifacts
      - name: Get commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Capture release artifacts collectively
        uses: actions/upload-artifact@v4
        with:
          name: MTR-ANTE-${{ steps.vars.outputs.sha_short }}
          path: artifacts/*.jar
          compression-level: 9
  release:
    if: startsWith(github.event.head_commit.message, 'rel')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "Latest tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: Set current date
        run: echo "CUR_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Get commit SHA
        run: echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*.jar
          body: |
            更新日期: ${{ env.CUR_DATE }}
            工作流: [${{ env.SHA_SHORT }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            更新内容:

            相关链接:
            - [RailwayAesthetics-Future文档](https://aphrodite281.github.io/RailwayAesthetics-Future/#/)
            - [ANTE文档](https://aphrodite281.github.io/mtr-ante/#/)
            - [RailwayAesthetics-Future发行版](https://github.com/aphrodite281/RailwayAesthetics-Future/releases)
            - [ANTE发行版](https://github.com/aphrodite281/mtr-ante/releases)
          draft: false
          prerelease: false
          tag_name: ${{ env.TAG }}